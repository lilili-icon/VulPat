,Unnamed: 0,CVE,CWE,func,ID
0,92,CVE-2017-5577,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device vc4_submit_next_render_job int Compound Decl PtrDecl vc4 vc4_dev FuncCall to_vc4_dev ExprList dev Decl PtrDecl exec vc4_exec_info FuncCall vc4_first_render_job ExprList vc4 If ! exec Return FuncCall submit_cl ExprList dev 1 StructRef exec ct1ca StructRef exec ct1ea End,22022
1,53,CVE-2017-8072,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl hdev hid_device cp2112_remove void Compound Decl PtrDecl dev cp2112_device FuncCall hid_get_drvdata ExprList hdev Decl i int FuncCall sysfs_remove_group ExprList & StructRef StructRef hdev dev kobj & cp2112_attr_group FuncCall i2c_del_adapter ExprList & StructRef dev adap If StructRef dev gpio_poll Compound = StructRef dev gpio_poll false FuncCall cancel_delayed_work_sync ExprList & StructRef dev gpio_poll_worker End For = i 0 < i FuncCall array_size ExprList StructRef dev desc ++ i Compound FuncCall gpiochip_unlock_as_irq ExprList & StructRef dev gc i FuncCall gpiochip_free_own_desc ExprList ArrayRef StructRef dev desc i End FuncCall gpiochip_remove ExprList & StructRef dev gc FuncCall hid_hw_close ExprList hdev FuncCall hid_hw_stop ExprList hdev End,21294
2,35,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu vmx_free_vcpu void Compound Decl PtrDecl vmx vcpu_vmx FuncCall to_vmx ExprList vcpu If enable_pml FuncCall vmx_destroy_pml_buffer ExprList vmx FuncCall free_vpid ExprList StructRef vmx vpid FuncCall leave_guest_mode ExprList vcpu FuncCall vmx_free_vcpu_nested ExprList vcpu FuncCall free_loaded_vmcs ExprList StructRef vmx loaded_vmcs FuncCall kfree ExprList StructRef vmx guest_msrs FuncCall kvm_vcpu_uninit ExprList vcpu FuncCall kmem_cache_free ExprList kvm_vcpu_cache vmx End,15147
3,37,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Typename TypeDecl void vmx_get_enable_apicv int Compound Return enable_apicv End,15149
4,43,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu vmx_set_msr_bitmap void Compound Decl PtrDecl msr_bitmap unsigned If FuncCall is_guest_mode ExprList vcpu = msr_bitmap StructRef StructRef FuncCall to_vmx ExprList vcpu nested msr_bitmap If && FuncCall cpu_has_secondary_exec_ctrls & FuncCall vmcs_read32 ExprList secondary_vm_exec_control secondary_exec_virtualize_x2apic_mode Compound If && enable_apicv FuncCall kvm_vcpu_apicv_active ExprList vcpu Compound If FuncCall is_long_mode ExprList vcpu = msr_bitmap vmx_msr_bitmap_longmode_x2apic_apicv = msr_bitmap vmx_msr_bitmap_legacy_x2apic_apicv End Compound If FuncCall is_long_mode ExprList vcpu = msr_bitmap vmx_msr_bitmap_longmode_x2apic = msr_bitmap vmx_msr_bitmap_legacy_x2apic End End Compound If FuncCall is_long_mode ExprList vcpu = msr_bitmap vmx_msr_bitmap_longmode = msr_bitmap vmx_msr_bitmap_legacy End FuncCall vmcs_write64 ExprList msr_bitmap FuncCall __pa ExprList msr_bitmap End,15155
5,6,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu handle_cpuid int Compound Return FuncCall kvm_emulate_cpuid ExprList vcpu End,15118
6,17,CVE-2016-9588,CWE-388,"FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu handle_xrstors int Compound FuncCall kvm_skip_emulated_instruction ExprList vcpu FuncCall warn ExprList 1 ""this should never happen\n"" Return 1 End",15129
7,72,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl start unsigned Decl end unsigned Decl PtrDecl walk mm_walk queue_pages_test_walk int Compound Decl PtrDecl vma vm_area_struct StructRef walk vma Decl PtrDecl qp queue_pages StructRef walk private Decl endvma unsigned StructRef vma vm_end Decl flags unsigned StructRef qp flags If ! FuncCall vma_migratable ExprList vma Return 1 If > endvma end = endvma end If > StructRef vma vm_start start = start StructRef vma vm_start If ! & flags mpol_mf_discontig_ok Compound If && ! StructRef vma vm_next < StructRef vma vm_end end Return - efault If && StructRef qp prev < StructRef StructRef qp prev vm_end StructRef vma vm_start Return - efault End = StructRef qp prev vma If & flags mpol_mf_lazy Compound If && && ! FuncCall is_vm_hugetlb_page ExprList vma & StructRef vma vm_flags | | vm_read vm_exec vm_write ! & StructRef vma vm_flags vm_mixedmap FuncCall change_prot_numa ExprList vma start endvma Return 1 End If & flags | mpol_mf_move mpol_mf_move_all Return 0 Return 1 End,21536
8,86,CVE-2017-5577,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device Decl PtrDecl exec vc4_exec_info vc4_move_job_to_render int Compound Decl PtrDecl vc4 vc4_dev FuncCall to_vc4_dev ExprList dev Decl was_empty int FuncCall list_empty ExprList & StructRef vc4 render_job_list FuncCall list_move_tail ExprList & StructRef exec head & StructRef vc4 render_job_list If was_empty FuncCall vc4_submit_next_render_job ExprList dev End,22016
9,66,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl sp shared_policy Decl PtrDecl mpol mempolicy mpol_shared_policy_init void Compound Decl ret int = StructRef sp root rb_root FuncCall rwlock_init ExprList & StructRef sp lock If mpol Compound Decl pvma vm_area_struct Decl PtrDecl new mempolicy FuncCall nodemask_scratch ExprList scratch If ! scratch put_mpol = new FuncCall mpol_new ExprList StructRef mpol mode StructRef mpol flags & StructRef StructRef mpol w user_nodemask If FuncCall is_err ExprList new free_scratch FuncCall task_lock ExprList current = ret FuncCall mpol_set_nodemask ExprList new & StructRef StructRef mpol w user_nodemask scratch FuncCall task_unlock ExprList current If ret put_new FuncCall memset ExprList & pvma 0 sizeof Typename TypeDecl vm_area_struct = StructRef pvma vm_end task_size FuncCall mpol_set_shared_policy ExprList sp & pvma new Label FuncCall mpol_put ExprList new Label FuncCall nodemask_scratch_free ExprList scratch Label FuncCall mpol_put ExprList mpol End End,21530
10,10,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu handle_nop int Compound Return FuncCall kvm_skip_emulated_instruction ExprList vcpu End,15122
11,32,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu vmx_cancel_hv_timer void Compound Decl PtrDecl vmx vcpu_vmx FuncCall to_vmx ExprList vcpu = StructRef vmx hv_deadline_tsc - 1 FuncCall vmcs_clear_bits ExprList pin_based_vm_exec_control pin_based_vmx_preemption_timer End,15144
12,1,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vmx vcpu_vmx decache_tsc_multiplier void Compound = StructRef vmx current_tsc_ratio StructRef StructRef StructRef vmx vcpu arch tsc_scaling_ratio FuncCall vmcs_write64 ExprList tsc_multiplier StructRef vmx current_tsc_ratio End,15113
13,40,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu vmx_pre_block int Compound If FuncCall pi_pre_block ExprList vcpu Return 1 If FuncCall kvm_lapic_hv_timer_in_use ExprList vcpu FuncCall kvm_lapic_switch_to_sw_timer ExprList vcpu Return 0 End,15152
14,56,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vma vm_area_struct Decl addr unsigned Decl end unsigned change_prot_numa unsigned Compound Return 0 End,21520
15,59,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl policy mempolicy interleave_nodes unsigned Compound Decl nid unsigned Decl next unsigned Decl PtrDecl me task_struct current = nid StructRef me il_next = next FuncCall next_node_in ExprList nid StructRef StructRef policy v nodes If < next max_numnodes = StructRef me il_next next Return nid End,21523
16,64,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl task task_struct mpol_put_task_policy void Compound Decl PtrDecl pol mempolicy FuncCall task_lock ExprList task = pol StructRef task mempolicy = StructRef task mempolicy null FuncCall task_unlock ExprList task FuncCall mpol_put ExprList pol End,21528
17,25,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu nested_vmx_check_vmcs12 int Compound Decl PtrDecl vmx vcpu_vmx FuncCall to_vmx ExprList vcpu If == StructRef StructRef vmx nested current_vmptr - 1ull Compound FuncCall nested_vmx_failinvalid ExprList vcpu Return 0 End Return 1 End,15137
18,18,CVE-2016-9588,CWE-388,"FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu handle_xsaves int Compound FuncCall kvm_skip_emulated_instruction ExprList vcpu FuncCall warn ExprList 1 ""this should never happen\n"" Return 1 End",15130
19,12,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu handle_rdpmc int Compound Decl err int = err FuncCall kvm_rdpmc ExprList vcpu Return FuncCall kvm_complete_insn_gp ExprList vcpu err End,15124
20,4,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu PtrDecl get_vmcs12 vmcs12 Compound Return StructRef StructRef FuncCall to_vmx ExprList vcpu nested cached_vmcs12 End,15116
21,31,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vmx vcpu_vmx vm_exit_controls_reset_shadow void Compound = StructRef vmx vm_exit_controls_shadow FuncCall vmcs_read32 ExprList vm_exit_controls End,15143
22,65,CVE-2017-7616,CWE-388,"FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl info shared_policy Decl PtrDecl vma vm_area_struct Decl PtrDecl npol mempolicy mpol_set_shared_policy int Compound Decl err int Decl PtrDecl new sp_node null Decl sz unsigned FuncCall vma_pages ExprList vma FuncCall pr_debug ExprList ""set_shared_policy %lx sz %lu %d %d %lx\n"" StructRef vma vm_pgoff sz TernaryOp npol StructRef npol mode - 1 TernaryOp npol StructRef npol flags - 1 TernaryOp npol ArrayRef FuncCall nodes_addr ExprList StructRef StructRef npol v nodes 0 numa_no_node If npol Compound = new FuncCall sp_alloc ExprList StructRef vma vm_pgoff + StructRef vma vm_pgoff sz npol If ! new Return - enomem End = err FuncCall shared_policy_replace ExprList info StructRef vma vm_pgoff + StructRef vma vm_pgoff sz new If && err new FuncCall sp_free ExprList new Return err End",21529
23,52,CVE-2017-8072,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl d irq_data cp2112_gpio_irq_unmask void Compound Decl PtrDecl gc gpio_chip FuncCall irq_data_get_irq_chip_data ExprList d Decl PtrDecl dev cp2112_device FuncCall gpiochip_get_data ExprList gc FuncCall __set_bit ExprList StructRef d hwirq & StructRef dev irq_mask End,21293
24,3,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vmx vcpu_vmx free_nested void Compound If ! StructRef StructRef vmx nested vmxon Return = StructRef StructRef vmx nested vmxon false FuncCall free_vpid ExprList StructRef StructRef vmx nested vpid02 FuncCall nested_release_vmcs12 ExprList vmx If StructRef StructRef vmx nested msr_bitmap Compound FuncCall free_page ExprList Cast Typename TypeDecl unsigned StructRef StructRef vmx nested msr_bitmap = StructRef StructRef vmx nested msr_bitmap null End If enable_shadow_vmcs Compound FuncCall vmcs_clear ExprList StructRef StructRef vmx vmcs01 shadow_vmcs FuncCall free_vmcs ExprList StructRef StructRef vmx vmcs01 shadow_vmcs = StructRef StructRef vmx vmcs01 shadow_vmcs null End FuncCall kfree ExprList StructRef StructRef vmx nested cached_vmcs12 If StructRef StructRef vmx nested apic_access_page Compound FuncCall nested_release_page ExprList StructRef StructRef vmx nested apic_access_page = StructRef StructRef vmx nested apic_access_page null End If StructRef StructRef vmx nested virtual_apic_page Compound FuncCall nested_release_page ExprList StructRef StructRef vmx nested virtual_apic_page = StructRef StructRef vmx nested virtual_apic_page null End If StructRef StructRef vmx nested pi_desc_page Compound FuncCall kunmap ExprList StructRef StructRef vmx nested pi_desc_page FuncCall nested_release_page ExprList StructRef StructRef vmx nested pi_desc_page = StructRef StructRef vmx nested pi_desc_page null = StructRef StructRef vmx nested pi_desc null End FuncCall nested_free_all_saved_vmcss ExprList vmx End,15115
25,21,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl loaded_vmcs loaded_vmcs loaded_vmcs_init void Compound FuncCall vmcs_clear ExprList StructRef loaded_vmcs vmcs If && StructRef loaded_vmcs shadow_vmcs StructRef loaded_vmcs launched FuncCall vmcs_clear ExprList StructRef loaded_vmcs shadow_vmcs = StructRef loaded_vmcs cpu - 1 = StructRef loaded_vmcs launched 0 End,15133
26,29,CVE-2016-9588,CWE-388,"FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu pi_pre_block int Compound Decl flags unsigned Decl dest unsigned Decl old pi_desc Decl new pi_desc Decl PtrDecl pi_desc pi_desc FuncCall vcpu_to_pi_desc ExprList vcpu If || || ! FuncCall kvm_arch_has_assigned_device ExprList StructRef vcpu kvm ! FuncCall irq_remapping_cap ExprList irq_posting_cap ! FuncCall kvm_vcpu_apicv_active ExprList vcpu Return 0 = StructRef vcpu pre_pcpu StructRef vcpu cpu FuncCall spin_lock_irqsave ExprList & FuncCall per_cpu ExprList blocked_vcpu_on_cpu_lock StructRef vcpu pre_pcpu flags FuncCall list_add_tail ExprList & StructRef vcpu blocked_vcpu_list & FuncCall per_cpu ExprList blocked_vcpu_on_cpu StructRef vcpu pre_pcpu FuncCall spin_unlock_irqrestore ExprList & FuncCall per_cpu ExprList blocked_vcpu_on_cpu_lock StructRef vcpu pre_pcpu flags DoWhile != FuncCall cmpxchg ExprList & StructRef pi_desc control StructRef old control StructRef new control StructRef old control Compound = StructRef old control = StructRef new control StructRef pi_desc control If == FuncCall pi_test_on ExprList pi_desc 1 Compound FuncCall spin_lock_irqsave ExprList & FuncCall per_cpu ExprList blocked_vcpu_on_cpu_lock StructRef vcpu pre_pcpu flags FuncCall list_del ExprList & StructRef vcpu blocked_vcpu_list FuncCall spin_unlock_irqrestore ExprList & FuncCall per_cpu ExprList blocked_vcpu_on_cpu_lock StructRef vcpu pre_pcpu flags = StructRef vcpu pre_pcpu - 1 Return 1 End FuncCall warn ExprList == StructRef pi_desc sn 1 ""Warning: SN field of posted-interrupts is set before blocking\n"" = dest FuncCall cpu_physical_id ExprList StructRef vcpu pre_pcpu If FuncCall x2apic_enabled = StructRef new ndst dest = StructRef new ndst & << dest 8 0xFF00 = StructRef new nv posted_intr_wakeup_vector End Return 0 End",15141
27,8,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu handle_invlpg int Compound Decl exit_qualification unsigned FuncCall vmcs_readl ExprList exit_qualification FuncCall kvm_mmu_invlpg ExprList vcpu exit_qualification Return FuncCall kvm_skip_emulated_instruction ExprList vcpu End,15120
28,41,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu vmx_refresh_apicv_exec_ctrl void Compound Decl PtrDecl vmx vcpu_vmx FuncCall to_vmx ExprList vcpu FuncCall vmcs_write32 ExprList pin_based_vm_exec_control FuncCall vmx_pin_based_exec_ctrl ExprList vmx If FuncCall cpu_has_secondary_exec_ctrls Compound If FuncCall kvm_vcpu_apicv_active ExprList vcpu FuncCall vmcs_set_bits ExprList secondary_vm_exec_control | secondary_exec_apic_register_virt secondary_exec_virtual_intr_delivery FuncCall vmcs_clear_bits ExprList secondary_vm_exec_control | secondary_exec_apic_register_virt secondary_exec_virtual_intr_delivery End If FuncCall cpu_has_vmx_msr_bitmap FuncCall vmx_set_msr_bitmap ExprList vcpu End,15153
29,97,CVE-2016-3179,CWE-388,"FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl path char OpenUnixSocket int Compound Decl addr sockaddr_un Decl s int Decl rv int = s FuncCall socket ExprList af_unix sock_stream 0 If < s 0 Compound FuncCall syslog ExprList log_err ""socket(AF_UNIX): %m"" Return - 1 End = rv FuncCall unlink ExprList path If && < rv 0 != errno enoent Compound FuncCall syslog ExprList log_err ""unlink(unixsocket, \""%s\""): %m"" path FuncCall close ExprList s Return - 1 End = StructRef addr sun_family af_unix FuncCall strncpy ExprList StructRef addr sun_path path sizeof StructRef addr sun_path If < FuncCall bind ExprList s Cast Typename PtrDecl TypeDecl sockaddr & addr sizeof Typename TypeDecl sockaddr_un 0 Compound FuncCall syslog ExprList log_err ""bind(unixsocket, \""%s\""): %m"" path FuncCall close ExprList s Return - 1 End If < FuncCall listen ExprList s 5 0 Compound FuncCall syslog ExprList log_err ""listen(unixsocket): %m"" FuncCall close ExprList s Return - 1 End If < FuncCall chmod ExprList path 0666 0 Compound FuncCall syslog ExprList log_warning ""chmod(\""%s\""): %m"" path End Return s End",22832
30,74,CVE-2017-7616,CWE-388,"FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl sp shared_policy Decl PtrDecl n sp_node sp_delete void Compound FuncCall pr_debug ExprList ""deleting %lx-l%lx\n"" StructRef n start StructRef n end FuncCall rb_erase ExprList & StructRef n nd & StructRef sp root FuncCall sp_free ExprList n End",21538
31,78,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vma vm_area_struct vma_policy_mof int Compound Decl PtrDecl pol mempolicy If && StructRef vma vm_ops StructRef StructRef vma vm_ops get_policy Compound Decl ret int false = pol FuncCall StructRef StructRef vma vm_ops get_policy ExprList vma StructRef vma vm_start If && pol & StructRef pol flags mpol_f_mof = ret true FuncCall mpol_cond_put ExprList pol Return ret End = pol StructRef vma vm_policy If ! pol = pol FuncCall get_task_policy ExprList current Return & StructRef pol flags mpol_f_mof End,21542
32,7,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu handle_dr int Compound Decl exit_qualification unsigned Decl dr int Decl dr7 int Decl reg int = exit_qualification FuncCall vmcs_readl ExprList exit_qualification = dr & exit_qualification debug_reg_access_num If ! FuncCall kvm_require_dr ExprList vcpu dr Return 1 If ! FuncCall kvm_require_cpl ExprList vcpu 0 Return 1 = dr7 FuncCall vmcs_readl ExprList guest_dr7 If & dr7 dr7_gd Compound If & StructRef vcpu guest_debug kvm_guestdbg_use_hw_bp Compound = StructRef StructRef StructRef StructRef vcpu run debug arch dr6 StructRef StructRef vcpu arch dr6 = StructRef StructRef StructRef StructRef vcpu run debug arch dr7 dr7 = StructRef StructRef StructRef StructRef vcpu run debug arch pc FuncCall kvm_get_linear_rip ExprList vcpu = StructRef StructRef StructRef StructRef vcpu run debug arch exception db_vector = StructRef StructRef vcpu run exit_reason kvm_exit_debug Return 0 End Compound &= StructRef StructRef vcpu arch dr6 ~ 15 |= StructRef StructRef vcpu arch dr6 | dr6_bd dr6_rtm FuncCall kvm_queue_exception ExprList vcpu db_vector Return 1 End End If == StructRef vcpu guest_debug 0 Compound FuncCall vmcs_clear_bits ExprList cpu_based_vm_exec_control cpu_based_mov_dr_exiting |= StructRef StructRef vcpu arch switch_db_regs kvm_debugreg_wont_exit Return 1 End = reg FuncCall debug_reg_access_reg ExprList exit_qualification If & exit_qualification type_mov_from_dr Compound Decl val unsigned If FuncCall kvm_get_dr ExprList vcpu dr & val Return 1 FuncCall kvm_register_write ExprList vcpu reg val End If FuncCall kvm_set_dr ExprList vcpu dr FuncCall kvm_register_readl ExprList vcpu reg Return 1 Return FuncCall kvm_skip_emulated_instruction ExprList vcpu End,15119
33,81,CVE-2017-5577,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device vc4_flush_caches int Compound Decl PtrDecl vc4 vc4_dev FuncCall to_vc4_dev ExprList dev FuncCall v3d_write ExprList v3d_l2cactl v3d_l2cactl_l2cclr FuncCall v3d_write ExprList v3d_slcactl | | | FuncCall vc4_set_field ExprList 0xf v3d_slcactl_t1cc FuncCall vc4_set_field ExprList 0xf v3d_slcactl_t0cc FuncCall vc4_set_field ExprList 0xf v3d_slcactl_ucc FuncCall vc4_set_field ExprList 0xf v3d_slcactl_icc End,22011
34,23,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu Decl val unsigned nested_cr3_valid int Compound Decl invalid_mask unsigned = invalid_mask << ~ 0ULL FuncCall cpuid_maxphyaddr ExprList vcpu Return == & val invalid_mask 0 End,15135
35,75,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl n sp_node sp_free void Compound FuncCall mpol_put ExprList StructRef n policy FuncCall kmem_cache_free ExprList sn_cache n End,21539
36,67,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl sp shared_policy Decl idx unsigned mpol_shared_policy_lookup int Compound Decl PtrDecl pol mempolicy null Decl PtrDecl sn sp_node If ! StructRef StructRef sp root rb_node Return null FuncCall read_lock ExprList & StructRef sp lock = sn FuncCall sp_lookup ExprList sp idx + idx 1 If sn Compound FuncCall mpol_get ExprList StructRef sn policy = pol StructRef sn policy End FuncCall read_unlock ExprList & StructRef sp lock Return pol End,21531
37,50,CVE-2017-8072,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl d irq_data cp2112_gpio_irq_shutdown void Compound Decl PtrDecl gc gpio_chip FuncCall irq_data_get_irq_chip_data ExprList d Decl PtrDecl dev cp2112_device FuncCall gpiochip_get_data ExprList gc FuncCall cancel_delayed_work_sync ExprList & StructRef dev gpio_poll_worker End,21291
38,80,CVE-2017-5577,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device Decl thread int Decl start int Decl end int submit_cl int Compound Decl PtrDecl vc4 vc4_dev FuncCall to_vc4_dev ExprList dev FuncCall v3d_write ExprList FuncCall v3d_ctnca ExprList thread start FuncCall v3d_write ExprList FuncCall v3d_ctnea ExprList thread end End,22010
39,9,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu handle_io int Compound Decl exit_qualification unsigned Decl size int Decl in int Decl string int Decl ret int Decl port unsigned = exit_qualification FuncCall vmcs_readl ExprList exit_qualification = string != & exit_qualification 16 0 = in != & exit_qualification 8 0 ++ StructRef StructRef vcpu stat io_exits If || string in Return == FuncCall emulate_instruction ExprList vcpu 0 emulate_done = port >> exit_qualification 16 = size + & exit_qualification 7 1 = ret FuncCall kvm_skip_emulated_instruction ExprList vcpu Return && FuncCall kvm_fast_pio_out ExprList vcpu size port ret End,15121
40,44,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu vmx_setup_mce void Compound If & StructRef StructRef vcpu arch mcg_cap mcg_lmce_p |= StructRef FuncCall to_vmx ExprList vcpu msr_ia32_feature_control_valid_bits feature_control_lmce &= StructRef FuncCall to_vmx ExprList vcpu msr_ia32_feature_control_valid_bits ~ feature_control_lmce End,15156
41,90,CVE-2017-5577,CWE-388,"FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device Decl PtrDecl data void Decl PtrDecl file_priv drm_file vc4_submit_cl_ioctl int Compound Decl PtrDecl vc4 vc4_dev FuncCall to_vc4_dev ExprList dev Decl PtrDecl args drm_vc4_submit_cl data Decl PtrDecl exec vc4_exec_info Decl ret int 0 If != & StructRef args flags ~ vc4_submit_cl_use_clear_color 0 Compound FuncCall drm_error ExprList ""Unknown flags: 0x%02x\n"" StructRef args flags Return - einval End = exec FuncCall kcalloc ExprList 1 sizeof * exec gfp_kernel If ! exec Compound FuncCall drm_error ExprList ""malloc failure on exec struct\n"" Return - enomem End FuncCall mutex_lock ExprList & StructRef vc4 power_lock If == ++ StructRef vc4 power_refcount 0 = ret FuncCall pm_runtime_get_sync ExprList & StructRef StructRef StructRef vc4 v3d pdev dev FuncCall mutex_unlock ExprList & StructRef vc4 power_lock If < ret 0 Compound FuncCall kfree ExprList exec Return ret End = StructRef exec args args FuncCall init_list_head ExprList & StructRef exec unref_list = ret FuncCall vc4_cl_lookup_bos ExprList dev file_priv exec If ret fail If != StructRef StructRef exec args bin_cl_size 0 Compound = ret FuncCall vc4_get_bcl ExprList dev exec If ret fail End Compound = StructRef exec ct0ca 0 = StructRef exec ct0ea 0 End = ret FuncCall vc4_get_rcl ExprList dev exec If ret fail = StructRef exec args null FuncCall vc4_queue_submit ExprList dev exec = StructRef args seqno StructRef vc4 emit_seqno Return 0 Label FuncCall vc4_complete_exec ExprList StructRef vc4 dev exec Return ret End",22020
42,68,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl page page Decl node unsigned Decl PtrDecl PtrDecl x int PtrDecl new_node_page page Compound If FuncCall pagehuge ExprList page Return FuncCall alloc_huge_page_node ExprList FuncCall page_hstate ExprList FuncCall compound_head ExprList page node Return FuncCall __alloc_pages_node ExprList node | gfp_highuser_movable __gfp_thisnode 0 End,21532
43,96,CVE-2017-5577,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device Decl PtrDecl data void Decl PtrDecl file_priv drm_file vc4_wait_seqno_ioctl int Compound Decl PtrDecl args drm_vc4_wait_seqno data Return FuncCall vc4_wait_for_seqno_ioctl_helper ExprList dev StructRef args seqno & StructRef args timeout_ns End,22026
44,54,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl policy mempolicy Decl zone zone_type apply_policy_zone int Compound Decl dynamic_policy_zone zone_type policy_zone FuncCall bug_on ExprList == dynamic_policy_zone zone_movable If ! FuncCall nodes_intersects ExprList StructRef StructRef policy v nodes ArrayRef node_states n_high_memory = dynamic_policy_zone zone_movable Return >= zone dynamic_policy_zone End,21518
45,15,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu handle_vmoff int Compound If ! FuncCall nested_vmx_check_permission ExprList vcpu Return 1 FuncCall free_nested ExprList FuncCall to_vmx ExprList vcpu FuncCall nested_vmx_succeed ExprList vcpu Return FuncCall kvm_skip_emulated_instruction ExprList vcpu End,15127
46,49,CVE-2017-8072,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl d irq_data cp2112_gpio_irq_mask void Compound Decl PtrDecl gc gpio_chip FuncCall irq_data_get_irq_chip_data ExprList d Decl PtrDecl dev cp2112_device FuncCall gpiochip_get_data ExprList gc FuncCall __clear_bit ExprList StructRef d hwirq & StructRef dev irq_mask End,21290
47,22,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vmcs12 vmcs12 nested_cpu_has_posted_intr int Compound Return & StructRef vmcs12 pin_based_vm_exec_control pin_based_posted_intr End,15134
48,34,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu Decl val int vmx_feature_control_msr_valid int Compound Decl valid_bits int StructRef FuncCall to_vmx ExprList vcpu msr_ia32_feature_control_valid_bits Return ! & val ~ valid_bits End,15146
49,57,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl p task_struct PtrDecl get_task_policy mempolicy Compound Decl PtrDecl pol mempolicy StructRef p mempolicy Decl node int If pol Return pol = node FuncCall numa_node_id If != node numa_no_node Compound = pol & ArrayRef preferred_node_policy node If StructRef pol mode Return pol End Return & default_policy End,21521
50,100,CVE-2016-3179,CWE-388,"FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl headers header removeDevice int Compound Decl PtrDecl PtrDecl pp device & devlist Decl PtrDecl p device * pp While p Compound If && && && == StructRef ArrayRef StructRef p headers header_nt l StructRef ArrayRef headers header_nt l == 0 FuncCall memcmp ExprList StructRef ArrayRef StructRef p headers header_nt p StructRef ArrayRef headers header_nt p StructRef ArrayRef headers header_nt l == StructRef ArrayRef StructRef p headers header_usn l StructRef ArrayRef headers header_usn l == 0 FuncCall memcmp ExprList StructRef ArrayRef StructRef p headers header_usn p StructRef ArrayRef headers header_usn p StructRef ArrayRef headers header_usn l Compound FuncCall syslog ExprList log_info ""remove device : %.*s"" StructRef ArrayRef headers header_usn l StructRef ArrayRef headers header_usn p = * pp StructRef p next FuncCall free ExprList p Return - 1 End = pp & StructRef p next = p * pp End FuncCall syslog ExprList log_warning ""device not found for removing : %.*s"" StructRef ArrayRef headers header_usn l StructRef ArrayRef headers header_usn p Return 0 End",22835
51,19,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Typename TypeDecl void init_vmcs_shadow_fields void Compound Decl i int Decl j int For = i = j 0 < i max_shadow_read_write_fields ++ i Compound Switch ArrayRef shadow_read_write_fields i Compound Case guest_bndcfgs If ! FuncCall kvm_mpx_supported Continue Break Default Break End If < j i = ArrayRef shadow_read_write_fields j ArrayRef shadow_read_write_fields i ++ j End = max_shadow_read_write_fields j For = i 0 < i max_shadow_read_write_fields ++ i Compound FuncCall clear_bit ExprList ArrayRef shadow_read_write_fields i vmx_vmwrite_bitmap FuncCall clear_bit ExprList ArrayRef shadow_read_write_fields i vmx_vmread_bitmap End For = i 0 < i max_shadow_read_only_fields ++ i FuncCall clear_bit ExprList ArrayRef shadow_read_only_fields i vmx_vmread_bitmap End,15131
52,88,CVE-2017-5577,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device Decl PtrDecl exec vc4_exec_info vc4_queue_submit int Compound Decl PtrDecl vc4 vc4_dev FuncCall to_vc4_dev ExprList dev Decl seqno int Decl irqflags unsigned FuncCall spin_lock_irqsave ExprList & StructRef vc4 job_lock irqflags = seqno ++ StructRef vc4 emit_seqno = StructRef exec seqno seqno FuncCall vc4_update_bo_seqnos ExprList exec seqno FuncCall list_add_tail ExprList & StructRef exec head & StructRef vc4 bin_job_list If == FuncCall vc4_first_bin_job ExprList vc4 exec Compound FuncCall vc4_submit_next_bin_job ExprList dev FuncCall vc4_queue_hangcheck ExprList dev End FuncCall spin_unlock_irqrestore ExprList & StructRef vc4 job_lock irqflags End,22018
53,58,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vma vm_area_struct Decl addr unsigned PtrDecl get_vma_policy mempolicy Compound Decl PtrDecl pol mempolicy FuncCall __get_vma_policy ExprList vma addr If ! pol = pol FuncCall get_task_policy ExprList current Return pol End,21522
54,55,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vma vm_area_struct Decl addr unsigned Decl end unsigned change_prot_numa unsigned Compound Decl nr_updated int = nr_updated FuncCall change_protection ExprList vma addr end page_none 0 1 If nr_updated FuncCall count_vm_numa_events ExprList numa_pte_updates nr_updated Return nr_updated End,21519
55,38,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu vmx_inject_nmi void Compound Decl PtrDecl vmx vcpu_vmx FuncCall to_vmx ExprList vcpu If ! FuncCall is_guest_mode ExprList vcpu Compound If ! FuncCall cpu_has_virtual_nmis Compound = StructRef vmx soft_vnmi_blocked 1 = StructRef vmx vnmi_blocked_time 0 End ++ StructRef StructRef vcpu stat nmi_injections = StructRef vmx nmi_known_unmasked false End If StructRef StructRef vmx rmode vm86_active Compound If != FuncCall kvm_inject_realmode_interrupt ExprList vcpu nmi_vector 0 emulate_done FuncCall kvm_make_request ExprList kvm_req_triple_fault vcpu Return End FuncCall vmcs_write32 ExprList vm_entry_intr_info_field | | intr_type_nmi_intr intr_info_valid_mask nmi_vector End,15150
56,87,CVE-2017-5577,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device Decl PtrDecl cb vc4_seqno_cb Decl seqno int Decl PtrDecl FuncDecl ParamList Decl PtrDecl cb vc4_seqno_cb func void vc4_queue_seqno_cb int Compound Decl PtrDecl vc4 vc4_dev FuncCall to_vc4_dev ExprList dev Decl ret int 0 Decl irqflags unsigned = StructRef cb func func FuncCall init_work ExprList & StructRef cb work vc4_seqno_cb_work FuncCall spin_lock_irqsave ExprList & StructRef vc4 job_lock irqflags If > seqno StructRef vc4 finished_seqno Compound = StructRef cb seqno seqno FuncCall list_add_tail ExprList & StructRef StructRef cb work entry & StructRef vc4 seqno_cb_list End Compound FuncCall schedule_work ExprList & StructRef cb work End FuncCall spin_unlock_irqrestore ExprList & StructRef vc4 job_lock irqflags Return ret End,22017
57,27,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl pi_desc pi_desc pi_clear_on void Compound FuncCall clear_bit ExprList posted_intr_on Cast Typename PtrDecl TypeDecl unsigned & StructRef pi_desc control End,15139
58,89,CVE-2017-5577,CWE-388,"FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device vc4_reset int Compound Decl PtrDecl vc4 vc4_dev FuncCall to_vc4_dev ExprList dev FuncCall drm_info ExprList ""Resetting GPU.\n"" FuncCall mutex_lock ExprList & StructRef vc4 power_lock If StructRef vc4 power_refcount Compound FuncCall pm_runtime_put_sync_suspend ExprList & StructRef StructRef StructRef vc4 v3d pdev dev FuncCall pm_runtime_get_sync ExprList & StructRef StructRef StructRef vc4 v3d pdev dev End FuncCall mutex_unlock ExprList & StructRef vc4 power_lock FuncCall vc4_irq_reset ExprList dev FuncCall vc4_queue_hangcheck ExprList dev End",22019
59,94,CVE-2017-5577,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device Decl seqno int Decl timeout_ns int Decl interruptible int vc4_wait_for_seqno int Compound Decl PtrDecl vc4 vc4_dev FuncCall to_vc4_dev ExprList dev Decl ret int 0 Decl timeout_expire unsigned FuncCall define_wait ExprList wait If >= StructRef vc4 finished_seqno seqno Return 0 If == timeout_ns 0 Return - etime = timeout_expire + jiffies FuncCall nsecs_to_jiffies ExprList timeout_ns FuncCall trace_vc4_wait_for_seqno_begin ExprList dev seqno timeout_ns For Compound FuncCall prepare_to_wait ExprList & StructRef vc4 job_wait_queue & wait TernaryOp interruptible task_interruptible task_uninterruptible If && interruptible FuncCall signal_pending ExprList current Compound = ret - erestartsys Break End If >= StructRef vc4 finished_seqno seqno Break If != timeout_ns ~ 0ull Compound If FuncCall time_after_eq ExprList jiffies timeout_expire Compound = ret - etime Break End FuncCall schedule_timeout ExprList - timeout_expire jiffies End Compound FuncCall schedule End End FuncCall finish_wait ExprList & StructRef vc4 job_wait_queue & wait FuncCall trace_vc4_wait_for_seqno_end ExprList dev seqno Return ret End,22024
60,0,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Typename TypeDecl void cpu_has_vmx_preemption_timer int Compound Return & StructRef vmcs_config pin_based_exec_ctrl pin_based_vmx_preemption_timer End,15112
61,33,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl kvm kvm Decl id unsigned PtrDecl vmx_create_vcpu kvm_vcpu Compound Decl err int Decl PtrDecl vmx vcpu_vmx FuncCall kmem_cache_zalloc ExprList kvm_vcpu_cache gfp_kernel Decl cpu int If ! vmx Return FuncCall err_ptr ExprList - enomem = StructRef vmx vpid FuncCall allocate_vpid = err FuncCall kvm_vcpu_init ExprList & StructRef vmx vcpu kvm id If err free_vcpu = err - enomem If enable_pml Compound = StructRef vmx pml_pg FuncCall alloc_page ExprList | gfp_kernel __gfp_zero If ! StructRef vmx pml_pg uninit_vcpu End = StructRef vmx guest_msrs FuncCall kmalloc ExprList page_size gfp_kernel FuncCall build_bug_on ExprList > * FuncCall array_size ExprList vmx_msr_index sizeof ArrayRef StructRef vmx guest_msrs 0 page_size If ! StructRef vmx guest_msrs free_pml = StructRef vmx loaded_vmcs & StructRef vmx vmcs01 = StructRef StructRef vmx loaded_vmcs vmcs FuncCall alloc_vmcs = StructRef StructRef vmx loaded_vmcs shadow_vmcs null If ! StructRef StructRef vmx loaded_vmcs vmcs free_msrs If ! vmm_exclusive FuncCall kvm_cpu_vmxon ExprList FuncCall __pa ExprList FuncCall per_cpu ExprList vmxarea FuncCall raw_smp_processor_id FuncCall loaded_vmcs_init ExprList StructRef vmx loaded_vmcs If ! vmm_exclusive FuncCall kvm_cpu_vmxoff = cpu FuncCall get_cpu FuncCall vmx_vcpu_load ExprList & StructRef vmx vcpu cpu = StructRef StructRef vmx vcpu cpu cpu = err FuncCall vmx_vcpu_setup ExprList vmx FuncCall vmx_vcpu_put ExprList & StructRef vmx vcpu FuncCall put_cpu If err free_vmcs If FuncCall cpu_need_virtualize_apic_accesses ExprList & StructRef vmx vcpu Compound = err FuncCall alloc_apic_access_page ExprList kvm If err free_vmcs End If enable_ept Compound If ! StructRef StructRef kvm arch ept_identity_map_addr = StructRef StructRef kvm arch ept_identity_map_addr vmx_ept_identity_pagetable_addr = err FuncCall init_rmode_identity_map ExprList kvm If err free_vmcs End If nested Compound FuncCall nested_vmx_setup_ctls_msrs ExprList vmx = StructRef StructRef vmx nested vpid02 FuncCall allocate_vpid End = StructRef StructRef vmx nested posted_intr_nv - 1 = StructRef StructRef vmx nested current_vmptr - 1ull = StructRef StructRef vmx nested current_vmcs12 null = StructRef vmx msr_ia32_feature_control_valid_bits feature_control_locked Return & StructRef vmx vcpu Label FuncCall free_vpid ExprList StructRef StructRef vmx nested vpid02 FuncCall free_loaded_vmcs ExprList StructRef vmx loaded_vmcs Label FuncCall kfree ExprList StructRef vmx guest_msrs Label FuncCall vmx_destroy_pml_buffer ExprList vmx Label FuncCall kvm_vcpu_uninit ExprList & StructRef vmx vcpu Label FuncCall free_vpid ExprList StructRef vmx vpid FuncCall kmem_cache_free ExprList kvm_vcpu_cache vmx Return FuncCall err_ptr ExprList err End,15145
62,99,CVE-2016-3179,CWE-388,"FileAST FuncDef Decl FuncDecl ParamList Decl nts int nts_to_str int Compound Switch nts Compound Case nts_ssdp_alive Return ""ssdp:alive"" Case nts_ssdp_byebye Return ""ssdp:byebye"" Case nts_ssdp_update Return ""ssdp:update"" End Return ""unknown"" End",22834
63,83,CVE-2017-5577,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device vc4_gem_destroy int Compound Decl PtrDecl vc4 vc4_dev FuncCall to_vc4_dev ExprList dev FuncCall warn_on ExprList != StructRef vc4 emit_seqno StructRef vc4 finished_seqno If StructRef vc4 overflow_mem Compound FuncCall drm_gem_object_unreference_unlocked ExprList & StructRef StructRef StructRef vc4 overflow_mem base base = StructRef vc4 overflow_mem null End If StructRef vc4 hang_state FuncCall vc4_free_hang_state ExprList dev StructRef vc4 hang_state FuncCall vc4_bo_cache_destroy ExprList dev End,22013
64,42,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu Decl cr4 unsigned vmx_set_cr4 int Compound Decl hw_cr4 unsigned | | & FuncCall cr4_read_shadow x86_cr4_mce & cr4 ~ x86_cr4_mce TernaryOp StructRef StructRef FuncCall to_vmx ExprList vcpu rmode vm86_active kvm_rmode_vm_cr4_always_on kvm_pmode_vm_cr4_always_on If & cr4 x86_cr4_vmxe Compound If ! FuncCall nested_vmx_allowed ExprList vcpu Return 1 End If && StructRef StructRef FuncCall to_vmx ExprList vcpu nested vmxon ! FuncCall nested_cr4_valid ExprList vcpu cr4 Return 1 = StructRef StructRef vcpu arch cr4 cr4 If enable_ept Compound If ! FuncCall is_paging ExprList vcpu Compound &= hw_cr4 ~ x86_cr4_pae |= hw_cr4 x86_cr4_pse End If ! & cr4 x86_cr4_pae Compound &= hw_cr4 ~ x86_cr4_pae End End If && ! enable_unrestricted_guest ! FuncCall is_paging ExprList vcpu &= hw_cr4 ~ | | x86_cr4_smep x86_cr4_smap x86_cr4_pke FuncCall vmcs_writel ExprList cr4_read_shadow cr4 FuncCall vmcs_writel ExprList guest_cr4 hw_cr4 Return 0 End,15154
65,5,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu handle_apic_access int Compound If FuncCall likely ExprList fasteoi Compound Decl exit_qualification unsigned FuncCall vmcs_readl ExprList exit_qualification Decl access_type int Decl offset int = access_type & exit_qualification apic_access_type = offset & exit_qualification apic_access_offset If && == access_type type_linear_apic_inst_write == offset apic_eoi Compound FuncCall kvm_lapic_set_eoi ExprList vcpu Return FuncCall kvm_skip_emulated_instruction ExprList vcpu End End Return == FuncCall emulate_instruction ExprList vcpu 0 emulate_done End,15117
66,26,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu Decl PtrDecl vmcs12 vmcs12 nested_vmx_merge_msr_bitmap int Compound Decl msr int Decl PtrDecl page page Decl PtrDecl msr_bitmap_l1 unsigned Decl PtrDecl msr_bitmap_l0 unsigned StructRef StructRef FuncCall to_vmx ExprList vcpu nested msr_bitmap If ! FuncCall nested_cpu_has_virt_x2apic_mode ExprList vmcs12 Return false = page FuncCall nested_get_page ExprList vcpu StructRef vmcs12 msr_bitmap If ! page Compound FuncCall warn_on ExprList 1 Return false End = msr_bitmap_l1 Cast Typename PtrDecl TypeDecl unsigned FuncCall kmap ExprList page If ! msr_bitmap_l1 Compound FuncCall nested_release_page_clean ExprList page FuncCall warn_on ExprList 1 Return false End FuncCall memset ExprList msr_bitmap_l0 0xff page_size If FuncCall nested_cpu_has_virt_x2apic_mode ExprList vmcs12 Compound If FuncCall nested_cpu_has_apic_reg_virt ExprList vmcs12 For = msr 0x800 <= msr 0x8ff ++ msr FuncCall nested_vmx_disable_intercept_for_msr ExprList msr_bitmap_l1 msr_bitmap_l0 msr msr_type_r FuncCall nested_vmx_disable_intercept_for_msr ExprList msr_bitmap_l1 msr_bitmap_l0 + apic_base_msr >> apic_taskpri 4 | msr_type_r msr_type_w If FuncCall nested_cpu_has_vid ExprList vmcs12 Compound FuncCall nested_vmx_disable_intercept_for_msr ExprList msr_bitmap_l1 msr_bitmap_l0 + apic_base_msr >> apic_eoi 4 msr_type_w FuncCall nested_vmx_disable_intercept_for_msr ExprList msr_bitmap_l1 msr_bitmap_l0 + apic_base_msr >> apic_self_ipi 4 msr_type_w End End FuncCall kunmap ExprList page FuncCall nested_release_page_clean ExprList page Return true End,15138
67,71,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl pol mempolicy Decl PtrDecl vma vm_area_struct Decl n unsigned offset_il_node unsigned Compound Decl nnodes unsigned FuncCall nodes_weight ExprList StructRef StructRef pol v nodes Decl target unsigned Decl i int Decl nid int If ! nnodes Return FuncCall numa_node_id = target % Cast Typename TypeDecl unsigned n nnodes = nid FuncCall first_node ExprList StructRef StructRef pol v nodes For = i 0 < i target ++ i = nid FuncCall next_node ExprList nid StructRef StructRef pol v nodes Return nid End,21535
68,85,CVE-2017-5577,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl data unsigned vc4_hangcheck_elapsed int Compound Decl PtrDecl dev drm_device Cast Typename PtrDecl TypeDecl drm_device data Decl PtrDecl vc4 vc4_dev FuncCall to_vc4_dev ExprList dev Decl ct0ca int Decl ct1ca int Decl irqflags unsigned Decl PtrDecl bin_exec vc4_exec_info Decl PtrDecl render_exec vc4_exec_info FuncCall spin_lock_irqsave ExprList & StructRef vc4 job_lock irqflags = bin_exec FuncCall vc4_first_bin_job ExprList vc4 = render_exec FuncCall vc4_first_render_job ExprList vc4 If && ! bin_exec ! render_exec Compound FuncCall spin_unlock_irqrestore ExprList & StructRef vc4 job_lock irqflags Return End = ct0ca FuncCall v3d_read ExprList FuncCall v3d_ctnca ExprList 0 = ct1ca FuncCall v3d_read ExprList FuncCall v3d_ctnca ExprList 1 If || && bin_exec != ct0ca StructRef bin_exec last_ct0ca && render_exec != ct1ca StructRef render_exec last_ct1ca Compound If bin_exec = StructRef bin_exec last_ct0ca ct0ca If render_exec = StructRef render_exec last_ct1ca ct1ca FuncCall spin_unlock_irqrestore ExprList & StructRef vc4 job_lock irqflags FuncCall vc4_queue_hangcheck ExprList dev Return End FuncCall spin_unlock_irqrestore ExprList & StructRef vc4 job_lock irqflags FuncCall schedule_work ExprList & StructRef StructRef vc4 hangcheck reset_work End,22015
69,47,CVE-2016-9588,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl vcpu kvm_vcpu vmx_vcpu_pi_put void Compound Decl PtrDecl pi_desc pi_desc FuncCall vcpu_to_pi_desc ExprList vcpu If || || ! FuncCall kvm_arch_has_assigned_device ExprList StructRef vcpu kvm ! FuncCall irq_remapping_cap ExprList irq_posting_cap ! FuncCall kvm_vcpu_apicv_active ExprList vcpu Return If StructRef vcpu preempted FuncCall pi_set_sn ExprList pi_desc End,15159
70,84,CVE-2017-5577,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device vc4_gem_init int Compound Decl PtrDecl vc4 vc4_dev FuncCall to_vc4_dev ExprList dev FuncCall init_list_head ExprList & StructRef vc4 bin_job_list FuncCall init_list_head ExprList & StructRef vc4 render_job_list FuncCall init_list_head ExprList & StructRef vc4 job_done_list FuncCall init_list_head ExprList & StructRef vc4 seqno_cb_list FuncCall spin_lock_init ExprList & StructRef vc4 job_lock FuncCall init_work ExprList & StructRef StructRef vc4 hangcheck reset_work vc4_reset_work FuncCall setup_timer ExprList & StructRef StructRef vc4 hangcheck timer vc4_hangcheck_elapsed Cast Typename TypeDecl unsigned dev FuncCall init_work ExprList & StructRef vc4 job_done_work vc4_job_done_work FuncCall mutex_init ExprList & StructRef vc4 power_lock End,22014
71,95,CVE-2017-5577,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device Decl seqno int Decl PtrDecl timeout_ns int vc4_wait_for_seqno_ioctl_helper int Compound Decl start unsigned jiffies Decl ret int FuncCall vc4_wait_for_seqno ExprList dev seqno * timeout_ns true If && || == ret - eintr == ret - erestartsys != * timeout_ns ~ 0ull Compound Decl delta int FuncCall jiffies_to_nsecs ExprList - jiffies start If >= * timeout_ns delta -= * timeout_ns delta End Return ret End,22025
72,48,CVE-2017-8072,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl d irq_data cp2112_gpio_irq_ack void Compound End,21289
73,93,CVE-2017-5577,CWE-388,"FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl dev drm_device Decl PtrDecl data void Decl PtrDecl file_priv drm_file vc4_wait_bo_ioctl int Compound Decl ret int Decl PtrDecl args drm_vc4_wait_bo data Decl PtrDecl gem_obj drm_gem_object Decl PtrDecl bo vc4_bo If != StructRef args pad 0 Return - einval = gem_obj FuncCall drm_gem_object_lookup ExprList file_priv StructRef args handle If ! gem_obj Compound FuncCall drm_error ExprList ""Failed to look up GEM BO %d\n"" StructRef args handle Return - einval End = bo FuncCall to_vc4_bo ExprList gem_obj = ret FuncCall vc4_wait_for_seqno_ioctl_helper ExprList dev StructRef bo seqno & StructRef args timeout_ns FuncCall drm_gem_object_unreference_unlocked ExprList gem_obj Return ret End",22023
74,77,CVE-2017-7616,CWE-388,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl src vm_area_struct Decl PtrDecl dst vm_area_struct vma_dup_policy int Compound Decl PtrDecl pol mempolicy FuncCall mpol_dup ExprList FuncCall vma_policy ExprList src If FuncCall is_err ExprList pol Return FuncCall ptr_err ExprList pol = StructRef dst vm_policy pol Return 0 End,21541
